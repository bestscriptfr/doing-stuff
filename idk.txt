import discord
from discord.ext import commands
import requests
import json

# Replace these variables with your own settings
TOKEN = "your_token_here"
PREFIX = "!script"
ROLES = ["owner", "buyer"]
MESSAGE_TITLE = "Here's your script"
LOADSTRING_COMMAND = '```loadstring(game:HttpGet("https://raw.githubusercontent.com/NighterEpic/Faded/main/YesEpic", true))()```'
MESSAGE_FIELD_COLOR = discord.Color.purple()

loading_strings = {}

# Load the saved loading strings from the JSON file
try:
    with open('loading_strings.json', 'r') as f:
        loading_strings = json.load(f)
except FileNotFoundError:
    pass

intents = discord.Intents.all()
client = commands.Bot(command_prefix='!', intents=intents)

@client.event
async def on_ready():
    print(f"Logged in as {client.user}")

@client.event
async def on_message(message):
    if message.content.startswith(PREFIX):
        roles = [discord.utils.get(message.author.roles, name=role) for role in ROLES]
        if any(role is not None for role in roles):
            # Check if the user has a saved loading string
            if str(message.author.id) in loading_strings:
                loading_string = loading_strings[str(message.author.id)]
            else:
                loading_string = LOADSTRING_COMMAND
                loading_strings[str(message.author.id)] = loading_string
                # Save the updated dictionary to the JSON file
                with open('loading_strings.json', 'w') as f:
                    json.dump(loading_strings, f)
            dm_channel = await message.author.create_dm()
            embed = discord.Embed(title=MESSAGE_TITLE, description=loading_string, color=MESSAGE_FIELD_COLOR)
            await dm_channel.send(embed=embed)
            response = f"{message.author.mention}, sent in DMs."
            await message.channel.send(response)
        else:
            response = f"{message.author.mention}, you do not have the required role to use this command."
            await message.channel.send(response)

client.run(TOKEN)
